# ==========================
# 1. Mathematical Operations
# ==========================

# 1. np.add(x1, x2)
# Adds two arrays element-wise.
# Example: np.add([1, 2], [3, 4]) → [4, 6]

# 2. np.subtract(x1, x2)
# Subtracts elements of second array from first.
# Example: np.subtract([5, 6], [2, 3]) → [3, 3]

# 3. np.multiply(x1, x2)
# Multiplies two arrays element-wise.
# Example: np.multiply([1, 2], [3, 4]) → [3, 8]

# 4. np.divide(x1, x2)
# Divides elements of first array by second.
# Example: np.divide([6, 8], [2, 4]) → [3.0, 2.0]

# 5. np.power(x1, x2)
# Raises elements of first array to the power of second.
# Example: np.power([2, 3], [3, 2]) → [8, 9]

# 6. np.sqrt(x)
# Returns the square root of each element.
# Example: np.sqrt([4, 9]) → [2.0, 3.0]

# 7. np.exp(x)
# Calculates exponential (e^x) for each element.
# Example: np.exp([1, 2]) → [2.718..., 7.389...]

# 8. np.log(x)
# Calculates natural logarithm (base e).
# Example: np.log([1, np.e]) → [0.0, 1.0]

# 9. np.sin(x), np.cos(x), np.tan(x)
# Trigonometric functions (input in radians).
# Example: np.sin(np.pi / 2) → 1.0

# 10. np.round(x)
# Rounds each element to nearest integer.
# Example: np.round([1.4, 2.6]) → [1., 3.]

# 11. np.floor(x)
# Rounds down to nearest integer.
# Example: np.floor([1.9]) → [1.]

# 12. np.ceil(x)
# Rounds up to nearest integer.
# Example: np.ceil([1.1]) → [2.]


# ======================
# 2. Array Operations
# ======================

# 1. np.array(list)
# Creates a NumPy array.
# Example: np.array([1, 2, 3])

# 2. np.zeros(shape)
# Creates array filled with 0s.
# Example: np.zeros((2, 2)) → [[0, 0], [0, 0]]

# 3. np.ones(shape)
# Creates array filled with 1s.
# Example: np.ones((2, 2)) → [[1, 1], [1, 1]]

# 4. np.full(shape, value)
# Creates array filled with a specific value.
# Example: np.full((2, 2), 5) → [[5, 5], [5, 5]]

# 5. np.eye(n)
# Creates identity matrix.
# Example: np.eye(3) → [[1,0,0],[0,1,0],[0,0,1]]

# 6. np.arange(start, stop, step)
# Creates array from start to stop with step.
# Example: np.arange(0, 10, 2) → [0, 2, 4, 6, 8]

# 7. np.linspace(start, stop, num)
# Returns evenly spaced numbers over a range.
# Example: np.linspace(0, 1, 5) → [0. , 0.25, 0.5 , 0.75, 1.]

# 8. np.reshape(arr, new_shape)
# Changes the shape of array without changing data.
# Example: np.reshape([1,2,3,4], (2,2)) → [[1,2],[3,4]]

# 9. np.concatenate((a, b), axis)
# Joins arrays along an axis.
# Example: np.concatenate(([1, 2], [3, 4])) → [1, 2, 3, 4]

# 10. np.split(arr, sections)
# Splits array into multiple parts.
# Example: np.split([1,2,3,4], 2) → [[1, 2], [3, 4]]

# 11. np.transpose(arr)
# Flips array axes.
# Example: Transpose of a matrix → rows become columns

# 12. np.flatten()
# Flattens a multi-dimensional array to 1D.
# Example: [[1, 2], [3, 4]] → [1, 2, 3, 4]

# 13. np.sort(arr)
# Sorts the array.
# Example: [3, 1, 2] → [1, 2, 3]

# 14. np.unique(arr)
# Returns sorted unique elements.
# Example: [1, 2, 2, 3] → [1, 2, 3]

# 15. arr.shape
# Returns the shape (dimensions) of array.

# 16. arr.ndim
# Returns number of dimensions.

# 17. arr.size
# Returns total number of elements.

# 18. arr.dtype
# Returns data type of array elements.


# ===========================
# 3. Statistical Operations
# ===========================

# 1. np.mean(arr)
# Average of elements.
# Example: np.mean([1, 2, 3]) → 2.0

# 2. np.median(arr)
# Middle value.
# Example: np.median([1, 3, 2]) → 2.0

# 3. np.std(arr)
# Standard deviation.
# Example: np.std([1, 2, 3]) → 0.816...

# 4. np.var(arr)
# Variance.
# Example: np.var([1, 2, 3]) → 0.666...

# 5. np.sum(arr)
# Sum of elements.
# Example: np.sum([1, 2, 3]) → 6

# 6. np.min(arr)
# Minimum value.
# Example: np.min([3, 1, 2]) → 1

# 7. np.max(arr)
# Maximum value.
# Example: np.max([3, 1, 2]) → 3

# 8. np.argmin(arr)
# Index of minimum.
# Example: np.argmin([3, 1, 2]) → 1

# 9. np.argmax(arr)
# Index of maximum.
# Example: np.argmax([3, 1, 2]) → 0

# 10. np.percentile(arr, q)
# q-th percentile.
# Example: np.percentile([1, 2, 3, 4], 50) → 2.5

# 11. np.average(arr, weights)
# Weighted average.
# Example: np.average([1, 2, 3], weights=[0.1, 0.3, 0.6]) → 2.5

# 12. np.cumsum(arr)
# Cumulative sum.
# Example: np.cumsum([1, 2, 3]) → [1, 3, 6]

# 13. np.cumprod(arr)
# Cumulative product.
# Example: np.cumprod([1, 2, 3]) → [1, 2, 6]


# =======================
# 4. Logical Operations
# =======================

# 1. np.all(arr)
# True if all elements are True.
# Example: np.all([True, True]) → True

# 2. np.any(arr)
# True if any element is True.
# Example: np.any([False, True]) → True

# 3. np.isfinite(arr)
# Checks for finite numbers.
# Example: np.isfinite([1, np.inf]) → [True, False]

# 4. np.isinf(arr)
# Checks for infinite values.
# Example: np.isinf([1, np.inf]) → [False, True]

# 5. np.isnan(arr)
# Checks for NaNs.
# Example: np.isnan([1, np.nan]) → [False, True]

# 6. np.logical_and(x1, x2)
# Element-wise AND.
# Example: np.logical_and([True, False], [False, False]) → [False, False]

# 7. np.logical_or(x1, x2)
# Element-wise OR.
# Example: np.logical_or([True, False], [False, False]) → [True, False]

# 8. np.logical_not(x)
# Element-wise NOT.
# Example: np.logical_not([True, False]) → [False, True]

# 9. np.logical_xor(x1, x2)
# Element-wise XOR.
# Example: np.logical_xor([True, False], [False, False]) → [True, False]


# ======================
# 5. Random Operations
# ======================

# 1. np.random.rand(d0, d1, ...)
# Random floats in [0.0, 1.0).
# Example: np.random.rand(2) → [0.23, 0.75]

# 2. np.random.randn(d0, d1, ...)
# Standard normal distribution.
# Example: np.random.randn(2) → [0.31, -0.87]

# 3. np.random.randint(low, high, size)
# Random integers.
# Example: np.random.randint(1, 10, size=3) → [3, 7, 2]

# 4. np.random.choice(array, size)
# Random sample from array.
# Example: np.random.choice([1, 2, 3], 2) → [2, 1]

# 5. np.random.shuffle(array)
# Shuffles array in-place.
# Example: np.random.shuffle([1, 2, 3]) → [3, 1, 2]

# 6. np.random.seed(seed)
# Sets seed for reproducibility.
# Example: np.random.seed(42)
